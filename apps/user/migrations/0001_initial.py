# Generated by Django 2.1.7 on 2019-07-30 14:13

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(default=uuid.UUID('fcf19613-3b1c-479d-96a6-01431a36d3b7'), editable=False, max_length=50, primary_key=True, serialize=False, verbose_name='用户ID')),
                ('sign_code', models.CharField(default='', max_length=20, verbose_name='职工号/学号')),
                ('gender', models.IntegerField(default=0, verbose_name='性别')),
                ('role', models.IntegerField(default=0, verbose_name='用户类型')),
                ('age', models.IntegerField(default=18, verbose_name='年龄')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('mobile', models.CharField(blank=True, default='', max_length=11, null=True, verbose_name='电话号码')),
                ('school', models.CharField(default='', max_length=50, verbose_name='学校')),
                ('class_name', models.CharField(default='', max_length=50, verbose_name='班级')),
                ('image', models.ImageField(default='image/default.png', max_length=200, upload_to='image/%Y/%m', verbose_name='头像')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubjectInfo',
            fields=[
                ('subject_id', models.CharField(default=uuid.UUID('544b21ad-7fd1-46a4-8291-34d0db5205d0'), editable=False, max_length=50, primary_key=True, serialize=False, verbose_name='科目ID')),
                ('subject_name', models.CharField(max_length=50, verbose_name='科目名称')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '科目信息',
                'verbose_name_plural': '科目信息',
            },
        ),
    ]
